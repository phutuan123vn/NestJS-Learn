generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          BigInt        @id @default(autoincrement())
  email       String        @unique
  name        String?
  password    String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  blogs       Blog[]
  BlogComment BlogComment[]
  Room        Room[]
  GroupRoom   GroupRoom[]
  RoomMessage RoomMessage[]
}

model Blog {
  id        BigInt        @id @default(autoincrement())
  title     String
  content   String
  author    User          @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  BigInt
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  slug      String?       @unique
  comments  BlogComment[]
}

model BlogComment {
  id        BigInt   @id @default(autoincrement())
  content   String
  blog      Blog     @relation(fields: [blogId], references: [id], onDelete: Cascade)
  blogId    BigInt
  user      User     @relation(fields: [userId], references: [id])
  userId    BigInt
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Room {
  id          BigInt        @id @default(autoincrement())
  name        String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  messages    RoomMessage[]
  creator     User          @relation(fields: [creatorId], references: [id])
  creatorId   BigInt        @unique
  groupRoom   GroupRoom     @relation(fields: [groupRoomId], references: [id])
  groupRoomId BigInt        @unique
}

model GroupRoom {
  id        BigInt   @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  rooms     Room[]
  users     User[]
}

model RoomMessage {
  id        BigInt   @id @default(autoincrement())
  content   String
  room      Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)
  roomId    BigInt
  user      User     @relation(fields: [userId], references: [id])
  userId    BigInt
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
